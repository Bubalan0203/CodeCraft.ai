// src/components/Buttons/DownloadButton.jsx
import React, { useState } from 'react';
import styled, { keyframes } from 'styled-components';
import JSZip from 'jszip';
import { saveAs } from 'file-saver';
import { FiDownload, FiCheckCircle } from 'react-icons/fi';

const Button = styled.button`
  background-color: #28a745;
  color: white;
  border: none;
  padding: 10px 16px;
  font-size: 14px;
  border-radius: 6px;
  display: flex;
  align-items: center;
  gap: 8px;
  cursor: pointer;
  transition: background 0.3s;

  &:hover {
    background-color: #1c7c31;
  }
`;

const fadeInOut = keyframes`
  0% { opacity: 0; transform: scale(0.95); }
  10% { opacity: 1; transform: scale(1); }
  90% { opacity: 1; transform: scale(1); }
  100% { opacity: 0; transform: scale(0.95); }
`;

const Modal = styled.div`
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: #1e1e1e;
  padding: 24px 32px;
  border-radius: 12px;
  color: white;
  z-index: 1000;
  animation: ${fadeInOut} 2.5s ease forwards;
  box-shadow: 0 0 20px rgba(0, 0, 0, 0.4);
  text-align: center;

  svg {
    color: #00c853;
    font-size: 32px;
    margin-bottom: 10px;
  }

  p {
    margin: 0;
    font-size: 16px;
  }
`;

const DownloadButton = ({ code, tech }) => {
  const [showModal, setShowModal] = useState(false);

  const handleDownload = async () => {
    const zip = new JSZip();

    if (tech === "HTML") {
      const htmlMatch = code.match(/(?:index\.html:)?\s*<!DOCTYPE html>[\s\S]*?<\/html>/i);
      const cssMatch = code.match(/style\.css:\s*([\s\S]*?)(?=script\.js:|$)/i);
      const jsMatch = code.match(/script\.js:\s*([\s\S]*)$/i);

      const html = htmlMatch ? htmlMatch[0].trim() : "<!-- No HTML provided -->";
      const css = cssMatch ? cssMatch[1].trim() : "/* No CSS provided */";
      const js = jsMatch ? jsMatch[1].trim() : "// No JS provided";

      const cleanedHTML = html.replace(/index\.html:\s*/i, "").trim();

      zip.file("index.html", cleanedHTML);
      zip.file("style.css", css);
      zip.file("script.js", js);
    }  else {
      // âœ… Full React template structure
      zip.file("public/index.html", `
  <!DOCTYPE html>
  <html lang="en">
    <head>
      <meta charset="UTF-8" />
      <meta name="viewport" content="width=device-width, initial-scale=1.0" />
      <title>React App</title>
    </head>
    <body>
      <div id="root"></div>
    </body>
  </html>
      `.trim());
  
      zip.file("src/index.js", `
  import React from 'react';
  import ReactDOM from 'react-dom/client';
  import App from './App';
  
  const root = ReactDOM.createRoot(document.getElementById('root'));
  root.render(<App />);
      `.trim());
  
      zip.file("src/App.jsx", code);
  
      zip.file("package.json", `
  {
    "name": "react-app",
    "version": "1.0.0",
    "private": true,
    "scripts": {
      "start": "vite",
      "build": "vite build",
      "dev": "vite",
      "preview": "vite preview"
    },
    "dependencies": {
      "react": "^18.2.0",
      "react-dom": "^18.2.0",
      "react-router-dom": "^6.21.2"
    },
    "devDependencies": {
      "vite": "^5.0.0"
    }
  }
      `.trim());
  
      zip.file("README.md", `
  # React App
  
  ## Getting Started
  
  \`\`\`bash
  npm install
  npm start
  \`\`\`
  
  This is a basic React project generated by CodeCraft.ai
      `.trim());
    }
  
    const content = await zip.generateAsync({ type: "blob" });
    saveAs(content, tech === "React" ? "react-app.zip" : "html-site.zip");
  
    setShowModal(true);
    setTimeout(() => setShowModal(false), 2500);
  };

  return (
    <>
      <Button onClick={handleDownload}>
        <FiDownload /> Download Code
      </Button>

      {showModal && (
        <Modal>
          <FiCheckCircle />
          <p>Code downloaded successfully!</p>
        </Modal>
      )}
    </>
  );
};

export default DownloadButton;
